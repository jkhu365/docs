(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{603:function(t,e,i){t.exports=i.p+"assets/img/191653458672_.pic.34aa5e0c.jpg"},604:function(t,e,i){t.exports=i.p+"assets/img/201653458765_.pic.5493dea5.jpg"},647:function(t,e,i){"use strict";i.r(e);var r=i(17),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"integration-preparation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#integration-preparation"}},[t._v("#")]),t._v(" Integration Preparation:")]),t._v(" "),r("h3",{attrs:{id:"ipa-sdk-contains-the-following-files"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ipa-sdk-contains-the-following-files"}},[t._v("#")]),t._v(" IPA SDK contains the following files:")]),t._v(" "),r("table",[r("tr",[r("th",[t._v("File Name")]),t._v(" "),r("th",[t._v("Description")])]),t._v(" "),r("tr",[r("td",[t._v("libipa.so")]),t._v(" "),r("td",[t._v("IPA SDK library ,  having different suffixes on different platforms")])]),t._v(" "),r("tr",[r("td",[t._v("rt_app_ipa.h")]),t._v(" "),r("td",[t._v("\n        Device API header file declaration. For the details, see the description in "),r("a",{attrs:{href:"https://docs.sim.express/api/ApiRefence/sdk.html"}},[t._v("IPA SDK API.")])])]),t._v(" "),r("tr",[r("td",[t._v("rt_ipa_port.h")]),t._v(" "),r("td",[t._v("Declaration of interface header file that user need to adapt and port to different platforms")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port.c")]),t._v(" "),r("td",[t._v("System API that the user needs to port and adapt, we will provide  the demo code, user can modify the specific implementation according to the specific system and requirements. ")])]),t._v(" "),r("tr",[r("td",[t._v("test_ipa_demo.c")]),t._v(" "),r("td",[t._v("IPA SDK interface demo code")])])]),t._v(" "),r("h2",{attrs:{id:"adaption-process"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#adaption-process"}},[t._v("#")]),t._v(" Adaption Process")]),t._v(" "),r("ul",[r("li",[t._v("You need to provide the compilation tool chain first, so that our team can compile the corresponding library for your system;")]),t._v(" "),r("li",[t._v("Transplant the Port codes and library into your system application;")]),t._v(" "),r("li",[t._v("Adapt the Port API in accordance with your device’s system;")])]),t._v(" "),r("h2",{attrs:{id:"integration-instruction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#integration-instruction"}},[t._v("#")]),t._v(" Integration Instruction")]),t._v(" "),r("p",[t._v("IPA SDK is an IoT Profile Assistant, which is provided in software SDK library and needs to be adapted and integrated in the external MCU or inside the module.")]),t._v(" "),r("p",[t._v("The port SDK interfaces are system interfaces, including standard C library interfaces, Modem interaction interfaces, thread synchronization interfaces and network communication interfaces. Considering the interfaces between different operation systems may not be compatible, in order to adapt to a new platform easily, Redtea Mobile provides reference Port source code. The customer need to read the description of the system interfaces and enable the functions as shown below.")]),t._v(" "),r("table",[r("tr",[r("td",{attrs:{rowspan:"6"}},[t._v("Standard C Library Interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_heap_malloc")]),t._v(" "),r("td",[t._v("Same function as standard C interface malloc")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_heap_free")]),t._v(" "),r("td",[t._v("Same function as standard C interface free")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_sprintf")]),t._v(" "),r("td",[t._v("Same function as standard C interface sprintf")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_snprintf")]),t._v(" "),r("td",[t._v("Same function as standard C interface snprintf")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_sscanf")]),t._v(" "),r("td",[t._v("Same function as standard C interface sscanf")])]),t._v(" "),r("tr",[r("td",{attrs:{rowspan:"3"}},[t._v("Basic Functions Interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_log_print_array")]),t._v(" "),r("td",[t._v("LOG interface, used to print array of a specified length")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_log_print")]),t._v(" "),r("td",[t._v("LOG print interface")])]),t._v(" "),r("tr",[r("td",{attrs:{rowspan:"3"}},[t._v("Modem Interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_modem_get_imei")]),t._v(" "),r("td",[t._v("Get module IMEI")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_modem_usim_transimit_apdu")]),t._v(" "),r("td",[t._v("Send APDU command to e-SIM card")])]),t._v(" "),r("tr",[r("td",{attrs:{rowspan:"5"}},[t._v("Thread and Synchronization Interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_task_sleep")]),t._v(" "),r("td",[t._v("Task dormancy or cyclic waiting function")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_mutex_create")]),t._v(" "),r("td",[t._v("Create a mutex")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_mutex_lock")]),t._v(" "),r("td",[t._v("Lock mutex")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_mutex_unlock")]),t._v(" "),r("td",[t._v("Unlock mutex")])]),t._v(" "),r("tr",[r("td",{attrs:{rowspan:"4"}},[t._v("HTTPS Communication interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_http_client_create")]),t._v(" "),r("td",[t._v("Create and initialize http client")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_http_client_destroy")]),t._v(" "),r("td",[t._v("Destroy a specified http client")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_http_post")]),t._v(" "),r("td",[t._v("Http client post request")])]),t._v(" "),r("tr",[r("td",{attrs:{rowspan:"5"}},[t._v("Other Functional Interfaces")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_read_flash")]),t._v(" "),r("td",[t._v("Read FLASH data")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_watch_dog")]),t._v(" "),r("td",[t._v("Watchdog")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_reset_esim")]),t._v(" "),r("td",[t._v("Reset eSIM")])]),t._v(" "),r("tr",[r("td",[t._v("rt_port_get_buffer")]),t._v(" "),r("td",[t._v("Get the system global buffer")])])]),t._v(" "),r("p",[t._v("For the detailed description and implementation of Port interfaces, please check the description in "),r("strong",[t._v("Port Demo SDK")]),t._v(" and in "),r("a",{attrs:{href:"https://docs.sim.express/api/ApiRefence/port.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HAL Port API"),r("OutboundLink")],1),t._v(";")]),t._v(" "),r("ul",[r("li",[t._v("Customer provide compilation tool chain or module SDK (or provide compilation parameters if it is DS5 or a similar general development tool);")]),t._v(" "),r("li",[t._v("Redtea Mobile SIM.Express team compile the IPA into library for the customer with the compilation tool chain or module SDK;")]),t._v(" "),r("li",[t._v("The customer copy the Port source code to its own application code;")]),t._v(" "),r("li",[t._v("The customer transplant relevant system interfaces in reference to Redtea Mobile’s Port source code;")]),t._v(" "),r("li",[t._v("The customer call Redtea Mobile’s API to implement service logic;")]),t._v(" "),r("li",[t._v("The customer compile the application or firmware package after linking with the Redtea Mobile  library file.")])]),t._v(" "),r("h2",{attrs:{id:"ipa-sdk-api-reference"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ipa-sdk-api-reference"}},[t._v("#")]),t._v(" IPA SDK API Reference")]),t._v(" "),r("p",[t._v("The SDK provides interfaces for downloading and managing Profiles, the customer shall call the relevant interface in accordance with its own business logic, to implement relevant service functions.\n"),r("table",[r("tr",[r("th",[t._v("Functions")]),t._v(" "),r("th",[t._v("Prototype")])]),t._v(" "),r("tr",[r("td",[t._v("InitializeIPA")]),t._v(" "),r("td",[t._v("int rt_ipa_init(void *arg)")])]),t._v(" "),r("tr",[r("td",[t._v("GetEID")]),t._v(" "),r("td",[t._v("int rt_ipa_get_eid(unsigned char *eid)")])]),t._v(" "),r("tr",[r("td",[t._v("GetProfileInfo")]),t._v(" "),r("td",[t._v("int rt_ipa_get_profile_info(profile_info_t *profile_info, unsigned int *num)")])]),t._v(" "),r("tr",[r("td",[t._v("EnableProfile")]),t._v(" "),r("td",[t._v("int rt_ipa_enable_profile(const char *iccid)")])]),t._v(" "),r("tr",[r("td",[t._v("RequestDeviceInfo")]),t._v(" "),r("td",[t._v("int rt_ipa_request_device_info(unsigned char *info, unsigned int *info_size)")])]),t._v(" "),r("tr",[r("td",[t._v("DownloadProfile")]),t._v(" "),r("td",[t._v("iint rt_ipa_download_profile(const unsigned char *info, unsigned int info_len)")])]),t._v(" "),r("tr",[r("td",[t._v("RequesteSIMInfo")]),t._v(" "),r("td",[t._v("int rt_ipa_request_esim_info(unsigned char *info, unsigned int *info_size)")])]),t._v(" "),r("tr",[r("td",[t._v("UpgradeeSIMOS")]),t._v(" "),r("td",[t._v("int rt_ipa_upgrade_esim_os(unsigned int addr, unsigned int length)")])])])]),t._v(" "),r("ul",[r("li",[r("p",[t._v("When the customer use the device API for the first time after starting its application, the customer shall call the “InitializeIPA” interface to initialize the terminal API.")])]),t._v(" "),r("li",[r("p",[t._v("The customer’s application call the “GetEID” and “GetProfileInfo” interfaces to query the information of the device.")])]),t._v(" "),r("li",[r("p",[t._v("The customer’s application call the “RequestDeviceInfo” interface to obtain relevant information of the device.")])]),t._v(" "),r("li",[r("p",[t._v("The customer’s application call the “DownloadProfile” interface to download Profile from SM-DP+ to the device.")])])]),t._v(" "),r("h2",{attrs:{id:"verification-steps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#verification-steps"}},[t._v("#")]),t._v(" Verification Steps:")]),t._v(" "),r("ul",[r("li",[t._v("Simple eSIM functions check: Check whether the functions of reading EID, obtaining device info, obtaining Profile info, printing logs, sending and receiving APDU are normal;")])]),t._v(" "),r("img",{staticStyle:{width:"500px",height:"150px"},attrs:{src:i(603)}}),t._v(" "),r("ul",[r("li",[t._v("Local Profile management function check: Enable the Profile, and check whether the modem works normally after Profile is switched;")])]),t._v(" "),r("img",{staticStyle:{width:"650px",height:"200px"},attrs:{src:i(604)}}),t._v(" "),r("ul",[r("li",[t._v("Profile download function check: Check whether HTTPS functions normally, and whether the downloaded Profile can be used normally;")]),t._v(" "),r("li",[t._v("Verify other eSIM management functions per service logic.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
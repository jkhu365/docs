(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{658:function(t,e,n){"use strict";n.r(e);var s=n(17),_=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"http-communication-interface"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-communication-interface"}},[t._v("#")]),t._v(" HTTP Communication Interface")]),t._v(" "),n("p",[t._v("Type: typedef void* rt_http_ctx\nAt least tls1.2 shall be supported.\n")]),n("h4",{staticStyle:{"font-size":"18px"}},[t._v(" rt_port_http_client_create")]),t._v(" "),n("table",[n("tr",[n("td",[t._v("Prototype")]),t._v(" "),n("td",{staticStyle:{width:"650px"}},[t._v("int rt_port_http_client_create(rt_http_ctx* http_client)")])]),t._v(" "),n("tr",[n("td",[t._v("Description")]),t._v(" "),n("td",[t._v("Create and initialize HTTP client")])]),t._v(" "),n("tr",[n("td",[t._v("Input")]),t._v(" "),n("td",[t._v("rt_http_ctx* http_client: the pointer to the HTTP client to be created")])]),t._v(" "),n("tr",[n("td",[t._v("Output")]),t._v(" "),n("td",[t._v("No output")])]),t._v(" "),n("tr",[n("td",[t._v("Response")]),t._v(" "),n("td",[t._v("Success: RT_RES_SUCESS"),n("br"),t._v("\nFailure: RT_RES_ERROR\n")])]),t._v(" "),n("tr",[n("td",[t._v("Remarks")]),t._v(" "),n("td",[t._v("/")])])]),n("p"),t._v(" "),n("h4",{staticStyle:{"font-size":"18px"}},[t._v(" rt_port_http_client_destroy")]),t._v(" "),n("table",[n("tr",[n("td",[t._v("Prototype")]),t._v(" "),n("td",{staticStyle:{width:"650px"}},[t._v("int rt_port_http_client_destroy(rt_http_ctx http_client)")])]),t._v(" "),n("tr",[n("td",[t._v("Description")]),t._v(" "),n("td",[t._v("Destroy a specified HTTP client")])]),t._v(" "),n("tr",[n("td",[t._v("Input")]),t._v(" "),n("td",[t._v("http_client: HTTP client to be destroyed")])]),t._v(" "),n("tr",[n("td",[t._v("Output")]),t._v(" "),n("td",[t._v("No output")])]),t._v(" "),n("tr",[n("td",[t._v("Response")]),t._v(" "),n("td",[t._v("Success: RT_RES_SUCESS"),n("br"),t._v("\nFailure: RT_RES_ERROR\n")])]),t._v(" "),n("tr",[n("td",[t._v("Remarks")]),t._v(" "),n("td",[t._v("/")])])]),t._v(" "),n("h4",{staticStyle:{"font-size":"18px"}},[t._v(" rt_port_http_post")]),t._v(" "),n("table",[n("tr",[n("td",[t._v("Prototype")]),t._v(" "),n("td",{staticStyle:{width:"650px"}},[t._v("\n        int rt_port_http_post(rt_http_ctx http_client, const char* http_host, unsigned int port, const char* http_api, const char* private_headers[], unsigned int private_header_cnt, const unsigned char* post_content, unsigned int post_len, unsigned int* http_rsp_addr, unsigned int* rsp_len, int* res_code, char* is_store_flash,char is_tls)")])]),t._v(" "),n("tr",[n("td",[t._v("Description")]),t._v(" "),n("td",[t._v("HTTP client post request")])]),t._v(" "),n("tr",[n("td",[t._v("Input")]),t._v(" "),n("td",[n("pre",[n("code",[t._v("http_client: HTTP client that initiated the request\nhttp_host: requested address\nport: requested port number\nhttp_api: api address\nprivate_headers: login access info (pointer array)\nprivate_header_cnt: number of login access info\npost_content: requested content (in JSON string)\npost_len: byte length of the requested content\nis_tls: Is it encrypted by TLS?\nExample:\nhttp_host: quark-staging.redtea.io\nport: 443\nhttp_api: /gsma/rsp2/es9plus/initiateAuthentication\nprivate_header: NULL\nis_tlsï¼š1\nURL of HTTPS address of the request: \n"),n("a",{attrs:{herf:"https://quark-staging.redtea.io:443/gsma/rsp2/es9plus/initiateAuthentication"}},[t._v("https://quark-staging.redtea.io:443/gsma/rsp2/es9plus/initiateAuthentication")]),t._v("\n443 is the default HTTPS port.")])])])]),t._v(" "),n("tr",[n("td",[t._v("Output")]),t._v(" "),n("td",[n("pre",[n("code",[t._v("http_rsp_addr: flash address of the info responded by the"),n("br"),t._v(" server (if is_store_flash != 0)\nrsp_len: byte length of the info responded\nres_code: code responded\nis_store_flash: 0, which means that the response is stored in RAM,"),n("br"),t._v(" the RAM address is obtained through 6.4 rt_port_get_buffer; !=0,"),n("br"),t._v(' means the response is stored in flash.\nExample of response:\nGenerally, the response is a JSON string, such as:\n{\n    "header":\n    {\n        "functionExecutionStatus":\n            {\n                "status":"Failed","statusCodeData":     \n                {\n                    "subjectCode":"0.0.0",\n                    "reasonCode":"0.0",\n                    "message":"Unknown error"\n                }\n            }\n        }\n    }\nres_code: HTTP status code responded, if the request succeeded, res_code=200\n')])])])]),t._v(" "),n("tr",[n("td",[t._v("Response")]),t._v(" "),n("td",[t._v("Success: RT_RES_SUCESS"),n("br"),t._v("\nFailure: RT_RES_ERROR"),n("br")])]),t._v(" "),n("tr",[n("td",[t._v("Remarks")]),t._v(" "),n("td",[t._v("/")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);